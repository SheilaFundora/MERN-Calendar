{"ast":null,"code":"const baseUrl = process.env.REACT_APP_API_URL; //el fetch personalizado va a recibir el endopiont q es la ruta en este caso auth, los datos q va a mandar\n// y el metodo q si no manda ninguno sera GET x defecto\n\nexport const fetchSinToken = function (endpoint, data) {\n  let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n  const url = `${baseUrl}/${endpoint}`; //la url q se forma es http://localhost:4000/api/auth, este el ultimo es el endpoint\n\n  if (method === 'GET') {\n    return fetch(url); //si es un get mandamos la url normal y retornamos\n  } else {\n    //si no mandamos q metodo es y llamamos al fetch q resivira siempre la url y en este caso tenemos\n    // q configurar el objeto q vamos a mandar\n    return fetch(url, {\n      method,\n      //mandamos el metodo\n      headers: {\n        //configuracion de como mandaremos el contenidp\n        'Content-type': 'application/json' //le especificamos el formato\n\n      },\n      body: JSON.stringify(data) //anexar el body al contenido q queremos mandar conevrtido en\n      // SON xq es el formato q queremos\n\n    });\n  }\n};\nexport const fetchConToken = function (endpoint, data) {\n  let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n  const url = `${baseUrl}/${endpoint}`;\n  const token = localStorage.getItem('token') || ''; //recibiendo el token del localStorage\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token //mandando el token en los headers\n\n      }\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token\n      },\n      body: JSON.stringify(data)\n    });\n  }\n};","map":{"version":3,"names":["baseUrl","process","env","REACT_APP_API_URL","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem"],"sources":["/home/erielmejias99/files/project/web/React/Calendar/MERN-Calendar/src/helpers/fetch.js"],"sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\n//el fetch personalizado va a recibir el endopiont q es la ruta en este caso auth, los datos q va a mandar\n// y el metodo q si no manda ninguno sera GET x defecto\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`; //la url q se forma es http://localhost:4000/api/auth, este el ultimo es el endpoint\n\n    if ( method === 'GET' ) {\n        return fetch( url ); //si es un get mandamos la url normal y retornamos\n    } else {\n        //si no mandamos q metodo es y llamamos al fetch q resivira siempre la url y en este caso tenemos\n        // q configurar el objeto q vamos a mandar\n        return fetch( url, {\n            method, //mandamos el metodo\n            headers: { //configuracion de como mandaremos el contenidp\n                'Content-type': 'application/json'//le especificamos el formato\n            },\n            body: JSON.stringify( data ) //anexar el body al contenido q queremos mandar conevrtido en\n            // SON xq es el formato q queremos\n        });\n    }\n}\n\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || ''; //recibiendo el token del localStorage\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token //mandando el token en los headers\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B,C,CAEA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG,UAAEC,QAAF,EAAYC,IAAZ,EAAsC;EAAA,IAApBC,MAAoB,uEAAX,KAAW;EAE/D,MAAMC,GAAG,GAAI,GAAGR,OAAS,IAAIK,QAAU,EAAvC,CAF+D,CAErB;;EAE1C,IAAKE,MAAM,KAAK,KAAhB,EAAwB;IACpB,OAAOE,KAAK,CAAED,GAAF,CAAZ,CADoB,CACC;EACxB,CAFD,MAEO;IACH;IACA;IACA,OAAOC,KAAK,CAAED,GAAF,EAAO;MACfD,MADe;MACP;MACRG,OAAO,EAAE;QAAE;QACP,gBAAgB,kBADX,CAC6B;;MAD7B,CAFM;MAKfC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgBP,IAAhB,CALS,CAKc;MAC7B;;IANe,CAAP,CAAZ;EAQH;AACJ,CAlBM;AAoBP,OAAO,MAAMQ,aAAa,GAAG,UAAET,QAAF,EAAYC,IAAZ,EAAsC;EAAA,IAApBC,MAAoB,uEAAX,KAAW;EAE/D,MAAMC,GAAG,GAAI,GAAGR,OAAS,IAAIK,QAAU,EAAvC;EACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAA/C,CAH+D,CAGZ;;EAEnD,IAAKV,MAAM,KAAK,KAAhB,EAAwB;IACpB,OAAOE,KAAK,CAAED,GAAF,EAAO;MACfD,MADe;MAEfG,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,WAAWK,KAFN,CAEY;;MAFZ;IAFM,CAAP,CAAZ;EAOH,CARD,MAQO;IACH,OAAON,KAAK,CAAED,GAAF,EAAO;MACfD,MADe;MAEfG,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,WAAWK;MAFN,CAFM;MAMfJ,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgBP,IAAhB;IANS,CAAP,CAAZ;EAQH;AACJ,CAvBM"},"metadata":{},"sourceType":"module"}