{"ast":null,"code":"import moment from \"moment\";\nimport { types } from \"../types/types\";\nconst initialState = {\n  //los eventos de calendario\n  events: [{\n    title: 'cumpleannos del jefe',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bg: '#fafafa',\n    user: {\n      _id: '123',\n      name: 'Sheila'\n    }\n  }],\n  //el evento activo, objeto con todos los datos del evento activo\n  activeEvents: null\n};\nexport const calendarReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.eventSetActive:\n      return { ...state,\n        activeEvents: action.payload\n      };\n\n    case types.eventAddNew:\n      return { ...state,\n        events: [//pongo en el evento todoo lo q estaba mas lo nuevo del payload, s recomendado\n        // utilizar el operador express ... para mandarlo todo\n        ...state.events, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["moment","types","initialState","events","title","start","toDate","end","add","bg","user","_id","name","activeEvents","calendarReducers","state","action","type","eventSetActive","payload","eventAddNew"],"sources":["/home/erielmejias99/files/project/web/React/MERN-Calendar/src/reducers/calendarReducers.js"],"sourcesContent":["\nimport moment from \"moment\";\nimport {types} from \"../types/types\";\n\nconst initialState = {\n    //los eventos de calendario\n    events: [{\n        title: 'cumpleannos del jefe',\n        start: moment().toDate(),\n        end: moment().add(2,'hours').toDate(),\n        bg: '#fafafa',\n        user: {\n            _id: '123',\n            name: 'Sheila'\n        }\n    }],\n    //el evento activo, objeto con todos los datos del evento activo\n    activeEvents: null\n}\n\nexport const calendarReducers = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvents: action.payload\n            }\n        case types.eventAddNew:\n                return {\n                    ...state,\n                    events: [ //pongo en el evento todoo lo q estaba mas lo nuevo del payload, s recomendado\n                        // utilizar el operador express ... para mandarlo todo\n                        ...state.events,\n                        action.payload\n                    ]\n                }\n\n        default:\n            return state;\n    }\n\n\n}"],"mappings":"AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AAEA,MAAMC,YAAY,GAAG;EACjB;EACAC,MAAM,EAAE,CAAC;IACLC,KAAK,EAAE,sBADF;IAELC,KAAK,EAAEL,MAAM,GAAGM,MAAT,EAFF;IAGLC,GAAG,EAAEP,MAAM,GAAGQ,GAAT,CAAa,CAAb,EAAe,OAAf,EAAwBF,MAAxB,EAHA;IAILG,EAAE,EAAE,SAJC;IAKLC,IAAI,EAAE;MACFC,GAAG,EAAE,KADH;MAEFC,IAAI,EAAE;IAFJ;EALD,CAAD,CAFS;EAYjB;EACAC,YAAY,EAAE;AAbG,CAArB;AAgBA,OAAO,MAAMC,gBAAgB,GAAG,YAAoC;EAAA,IAAlCC,KAAkC,uEAA1Bb,YAA0B;EAAA,IAAZc,MAAY;;EAEhE,QAASA,MAAM,CAACC,IAAhB;IAEI,KAAKhB,KAAK,CAACiB,cAAX;MACI,OAAO,EACH,GAAGH,KADA;QAEHF,YAAY,EAAEG,MAAM,CAACG;MAFlB,CAAP;;IAIJ,KAAKlB,KAAK,CAACmB,WAAX;MACQ,OAAO,EACH,GAAGL,KADA;QAEHZ,MAAM,EAAE,CAAE;QACN;QACA,GAAGY,KAAK,CAACZ,MAFL,EAGJa,MAAM,CAACG,OAHH;MAFL,CAAP;;IASR;MACI,OAAOJ,KAAP;EAlBR;AAsBH,CAxBM"},"metadata":{},"sourceType":"module"}