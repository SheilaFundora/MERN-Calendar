{"ast":null,"code":"var _jsxFileName = \"/home/erielmejias99/files/project/web/React/Calendar/MERN-Calendar/src/routers/PublicRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { Navigate } from \"react-big-calendar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PublicRoute = _ref => {\n  let {\n    isAuthenticated,\n    element: element,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    element: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"element\", { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = PublicRoute;\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["React","PropTypes","Route","Navigate","PublicRoute","isAuthenticated","element","rest","props","propTypes","bool","isRequired","component","func"],"sources":["/home/erielmejias99/files/project/web/React/Calendar/MERN-Calendar/src/routers/PublicRoute.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route } from 'react-router-dom';\nimport {Navigate} from \"react-big-calendar\";\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    element: element,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            element={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Navigate to=\"/\" /> )\n                    : ( <element { ...props } /> )\n            )}\n\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAGA,OAAO,MAAMC,WAAW,GAAG,QAIrB;EAAA,IAJsB;IACxBC,eADwB;IAExBC,OAAO,EAAEA,OAFe;IAGxB,GAAGC;EAHqB,CAItB;EAEF,oBACI,QAAC,KAAD,OAAYA,IAAZ;IACI,OAAO,EAAIC,KAAD,IACJH,eAAF,gBACQ,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QADR,gBAEQ,wBAAcG;IAAd;MAAA;MAAA;MAAA;IAAA;EAJhB;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAhBM;KAAMJ,W;AAkBbA,WAAW,CAACK,SAAZ,GAAwB;EACpBJ,eAAe,EAAEJ,SAAS,CAACS,IAAV,CAAeC,UADZ;EAEpBC,SAAS,EAAEX,SAAS,CAACY,IAAV,CAAeF;AAFN,CAAxB"},"metadata":{},"sourceType":"module"}