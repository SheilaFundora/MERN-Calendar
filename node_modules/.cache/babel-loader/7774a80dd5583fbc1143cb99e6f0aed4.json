{"ast":null,"code":"import { heroes } from '../data/heroes';\nexport const getHeroesByPublisher = publisher => {\n  const validPublishers = ['DC Comics', 'Marvel Comics']; //si mi publisher no contine los valores q estan en validPublisher lanza una excepcion\n\n  if (!validPublishers.includes(publisher)) {\n    throw new Error(`Publisher \"${publisher}\" no es correcto`);\n  } // retorna los heroes los cuales su publisher es igual a la del publisher pasado\n\n\n  return heroes.filter(hero => hero.publisher === publisher);\n};","map":{"version":3,"names":["heroes","getHeroesByPublisher","publisher","validPublishers","includes","Error","filter","hero"],"sources":["/home/erielmejias99/files/project/React/Heroes-App/src/components/selectors/getHeroeByPublisher.js"],"sourcesContent":["import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    //si mi publisher no contine los valores q estan en validPublisher lanza una excepcion\n    if ( !validPublishers.includes( publisher ) ) {\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\n    }\n\n    // retorna los heroes los cuales su publisher es igual a la del publisher pasado\n    return heroes.filter( hero => hero.publisher === publisher );\n\n}\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,gBAAvB;AAEA,OAAO,MAAMC,oBAAoB,GAAKC,SAAF,IAAiB;EAEjD,MAAMC,eAAe,GAAG,CAAC,WAAD,EAAc,eAAd,CAAxB,CAFiD,CAIjD;;EACA,IAAK,CAACA,eAAe,CAACC,QAAhB,CAA0BF,SAA1B,CAAN,EAA8C;IAC1C,MAAM,IAAIG,KAAJ,CAAW,cAAcH,SAAW,kBAApC,CAAN;EACH,CAPgD,CASjD;;;EACA,OAAOF,MAAM,CAACM,MAAP,CAAeC,IAAI,IAAIA,IAAI,CAACL,SAAL,KAAmBA,SAA1C,CAAP;AAEH,CAZM"},"metadata":{},"sourceType":"module"}