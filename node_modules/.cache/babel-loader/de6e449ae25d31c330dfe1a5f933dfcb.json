{"ast":null,"code":"import{heroes}from'../data/heroes';export var getHeroesByPublisher=function getHeroesByPublisher(publisher){var validPublishers=['DC Comics','Marvel Comics'];//si mi publisher no contine los valores q estan en validPublisher lanza una excepcion\nif(!validPublishers.includes(publisher)){throw new Error(\"Publisher \\\"\".concat(publisher,\"\\\" no es correcto\"));}// retorna los heroes los cuales su publisher es igual a la del publisher pasado\nreturn heroes.filter(function(hero){return hero.publisher===publisher;});};","map":{"version":3,"names":["heroes","getHeroesByPublisher","publisher","validPublishers","includes","Error","filter","hero"],"sources":["/home/erielmejias99/files/project/React/Heroes-App/src/selectors/getHeroeByPublisher.js"],"sourcesContent":["import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    //si mi publisher no contine los valores q estan en validPublisher lanza una excepcion\n    if ( !validPublishers.includes( publisher ) ) {\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\n    }\n\n    // retorna los heroes los cuales su publisher es igual a la del publisher pasado\n    return heroes.filter( hero => hero.publisher === publisher );\n\n}\n"],"mappings":"AAAA,OAASA,MAAT,KAAuB,gBAAvB,CAEA,MAAO,IAAMC,qBAAoB,CAAG,QAAvBA,qBAAuB,CAAEC,SAAF,CAAiB,CAEjD,GAAMC,gBAAe,CAAG,CAAC,WAAD,CAAc,eAAd,CAAxB,CAEA;AACA,GAAK,CAACA,eAAe,CAACC,QAAhB,CAA0BF,SAA1B,CAAN,CAA8C,CAC1C,KAAM,IAAIG,MAAJ,uBAAyBH,SAAzB,sBAAN,CACH,CAED;AACA,MAAOF,OAAM,CAACM,MAAP,CAAe,SAAAC,IAAI,QAAIA,KAAI,CAACL,SAAL,GAAmBA,SAAvB,EAAnB,CAAP,CAEH,CAZM"},"metadata":{},"sourceType":"module"}